{"version":3,"file":"z-group-demo.js","sources":["../z-group-demo.js"],"sourcesContent":["class ZGroupDemo extends HTMLElement {\n  constructor() {\n    super();\n    // Attach shadow DOM for encapsulation\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: Arial, sans-serif;\n          background-color: #eef;\n          margin: 0;\n          padding: 20px;\n        }\n        h1 {\n          text-align: center;\n          color: #333;\n        }\n        section {\n          background-color: #fff;\n          border: 1px solid #ccc;\n          padding: 15px;\n          margin: 20px 0;\n          border-radius: 8px;\n        }\n        label {\n          margin-right: 10px;\n        }\n        input {\n          margin: 5px;\n          padding: 5px;\n          width: 60px;\n        }\n        button {\n          padding: 8px 16px;\n          font-size: 14px;\n          margin-top: 10px;\n          cursor: pointer;\n          border: none;\n          border-radius: 4px;\n          background-color: #007BFF;\n          color: #fff;\n          transition: background-color 0.3s;\n        }\n        button:hover {\n          background-color: #0056b3;\n        }\n        div {\n          margin-top: 10px;\n          font-weight: bold;\n        }\n      </style>\n      <h1>Z Group Demonstration</h1>\n      <p>\n        This demonstration shows the group properties of the set of integers \n        <math xmlns=\"http://www.w3.org/1998/Math/MathML\">\n          <mi>&#x2124;</mi>\n        </math>\n        under addition.\n      </p>\n      \n      <section id=\"closure\">\n        <h2>Closure</h2>\n        <p>\n          Enter two integers to demonstrate closure:\n          <math xmlns=\"http://www.w3.org/1998/Math/MathML\">\n            <mi>a</mi>\n            <mo>+</mo>\n            <mi>b</mi>\n            <mo>=</mo>\n            <mi>&#x2124;</mi>\n          </math>\n        </p>\n        <label for=\"closure-a\">a:</label>\n        <input id=\"closure-a\" type=\"number\" step=\"1\">\n        <label for=\"closure-b\">b:</label>\n        <input id=\"closure-b\" type=\"number\" step=\"1\">\n        <button id=\"check-closure\">Check Closure</button>\n        <div id=\"closure-result\"></div>\n      </section>\n      \n      <section id=\"identity\">\n        <h2>Identity</h2>\n        <p>\n          Enter an integer to demonstrate the identity element:\n          <math xmlns=\"http://www.w3.org/1998/Math/MathML\">\n            <mi>a</mi>\n            <mo>+</mo>\n            <mn>0</mn>\n            <mo>=</mo>\n            <mi>a</mi>\n          </math>\n        </p>\n        <label for=\"identity-a\">a:</label>\n        <input id=\"identity-a\" type=\"number\" step=\"1\">\n        <button id=\"check-identity\">Check Identity</button>\n        <div id=\"identity-result\"></div>\n      </section>\n      \n      <section id=\"associativity\">\n        <h2>Associativity</h2>\n        <p>\n          Enter three integers to demonstrate associativity:\n          <math xmlns=\"http://www.w3.org/1998/Math/MathML\">\n            <mo>(</mo>\n            <mi>a</mi>\n            <mo>+</mo>\n            <mi>b</mi>\n            <mo>)</mo>\n            <mo>+</mo>\n            <mi>c</mi>\n            <mo>=</mo>\n            <mi>a</mi>\n            <mo>+</mo>\n            <mo>(</mo>\n            <mi>b</mi>\n            <mo>+</mo>\n            <mi>c</mi>\n            <mo>)</mo>\n          </math>\n        </p>\n        <label for=\"assoc-a\">a:</label>\n        <input id=\"assoc-a\" type=\"number\" step=\"1\">\n        <label for=\"assoc-b\">b:</label>\n        <input id=\"assoc-b\" type=\"number\" step=\"1\">\n        <label for=\"assoc-c\">c:</label>\n        <input id=\"assoc-c\" type=\"number\" step=\"1\">\n        <button id=\"check-associativity\">Check Associativity</button>\n        <div id=\"associativity-result\"></div>\n      </section>\n      \n      <section id=\"inverse\">\n        <h2>Inverse</h2>\n        <p>\n          Enter an integer to demonstrate the inverse property:\n          <math xmlns=\"http://www.w3.org/1998/Math/MathML\">\n            <mi>a</mi>\n            <mo>+</mo>\n            <mrow>\n              <mo>(</mo>\n              <mo>&#x2212;</mo>\n              <mi>a</mi>\n              <mo>)</mo>\n            </mrow>\n            <mo>=</mo>\n            <mn>0</mn>\n          </math>\n        </p>\n        <label for=\"inverse-a\">a:</label>\n        <input id=\"inverse-a\" type=\"number\" step=\"1\">\n        <button id=\"check-inverse\">Check Inverse</button>\n        <div id=\"inverse-result\"></div>\n      </section>\n    `;\n  }\n  \n  connectedCallback() {\n    // Closure\n    this.shadowRoot.getElementById('check-closure').addEventListener('click', () => {\n      const a = parseInt(this.shadowRoot.getElementById('closure-a').value, 10);\n      const b = parseInt(this.shadowRoot.getElementById('closure-b').value, 10);\n      if (isNaN(a) || isNaN(b)) {\n        this.shadowRoot.getElementById('closure-result').textContent = \"Please enter valid integers for a and b.\";\n        return;\n      }\n      const sum = a + b;\n      this.shadowRoot.getElementById('closure-result').textContent = `Result: ${a} + ${b} = ${sum}. Closure holds because the sum is an integer.`;\n    });\n  \n    // Identity\n    this.shadowRoot.getElementById('check-identity').addEventListener('click', () => {\n      const a = parseInt(this.shadowRoot.getElementById('identity-a').value, 10);\n      if (isNaN(a)) {\n        this.shadowRoot.getElementById('identity-result').textContent = \"Please enter a valid integer for a.\";\n        return;\n      }\n      const result = a + 0;\n      this.shadowRoot.getElementById('identity-result').textContent = `Result: ${a} + 0 = ${result}. The identity element in (ℤ, +) is 0.`;\n    });\n  \n    // Associativity\n    this.shadowRoot.getElementById('check-associativity').addEventListener('click', () => {\n      const a = parseInt(this.shadowRoot.getElementById('assoc-a').value, 10);\n      const b = parseInt(this.shadowRoot.getElementById('assoc-b').value, 10);\n      const c = parseInt(this.shadowRoot.getElementById('assoc-c').value, 10);\n      if (isNaN(a) || isNaN(b) || isNaN(c)) {\n        this.shadowRoot.getElementById('associativity-result').textContent = \"Please enter valid integers for a, b, and c.\";\n        return;\n      }\n      const left = (a + b) + c;\n      const right = a + (b + c);\n      let message = `Result: ( ${a} + ${b} ) + ${c} = ${left} and ${a} + ( ${b} + ${c} ) = ${right}. `;\n      message += (left === right) ? \"Associativity holds.\" : \"Associativity does not hold!\";\n      this.shadowRoot.getElementById('associativity-result').textContent = message;\n    });\n  \n    // Inverse\n    this.shadowRoot.getElementById('check-inverse').addEventListener('click', () => {\n      const a = parseInt(this.shadowRoot.getElementById('inverse-a').value, 10);\n      if (isNaN(a)) {\n        this.shadowRoot.getElementById('inverse-result').textContent = \"Please enter a valid integer for a.\";\n        return;\n      }\n      const inverse = -a;\n      const sum = a + inverse;\n      this.shadowRoot.getElementById('inverse-result').textContent = `Result: ${a} + (${inverse}) = ${sum}. Every integer a has an inverse (–a) such that a + (–a) = 0.`;\n    });\n  }\n}\n\ncustomElements.define('z-group-demo', ZGroupDemo);\n"],"names":["ZGroupDemo","HTMLElement","constructor","super","this","attachShadow","mode","shadowRoot","innerHTML","connectedCallback","getElementById","addEventListener","a","parseInt","value","b","isNaN","textContent","sum","result","c","left","right","message","inverse","customElements","define"],"mappings":"AAAA,MAAMA,UAAmBC,YACvB,WAAAC,GACEC,QAEAC,KAAKC,aAAa,CAAEC,KAAM,SAC1BF,KAAKG,WAAWC,UAAY,4vIAqJ7B,CAED,iBAAAC,GAEEL,KAAKG,WAAWG,eAAe,iBAAiBC,iBAAiB,SAAS,KACxE,MAAMC,EAAIC,SAAST,KAAKG,WAAWG,eAAe,aAAaI,MAAO,IAChEC,EAAIF,SAAST,KAAKG,WAAWG,eAAe,aAAaI,MAAO,IACtE,GAAIE,MAAMJ,IAAMI,MAAMD,GAEpB,YADAX,KAAKG,WAAWG,eAAe,kBAAkBO,YAAc,4CAGjE,MAAMC,EAAMN,EAAIG,EAChBX,KAAKG,WAAWG,eAAe,kBAAkBO,YAAc,WAAWL,OAAOG,OAAOG,iDAAmD,IAI7Id,KAAKG,WAAWG,eAAe,kBAAkBC,iBAAiB,SAAS,KACzE,MAAMC,EAAIC,SAAST,KAAKG,WAAWG,eAAe,cAAcI,MAAO,IACvE,GAAIE,MAAMJ,GAER,YADAR,KAAKG,WAAWG,eAAe,mBAAmBO,YAAc,uCAGlE,MAAME,EAASP,EAAI,EACnBR,KAAKG,WAAWG,eAAe,mBAAmBO,YAAc,WAAWL,WAAWO,yCAA8C,IAItIf,KAAKG,WAAWG,eAAe,uBAAuBC,iBAAiB,SAAS,KAC9E,MAAMC,EAAIC,SAAST,KAAKG,WAAWG,eAAe,WAAWI,MAAO,IAC9DC,EAAIF,SAAST,KAAKG,WAAWG,eAAe,WAAWI,MAAO,IAC9DM,EAAIP,SAAST,KAAKG,WAAWG,eAAe,WAAWI,MAAO,IACpE,GAAIE,MAAMJ,IAAMI,MAAMD,IAAMC,MAAMI,GAEhC,YADAhB,KAAKG,WAAWG,eAAe,wBAAwBO,YAAc,gDAGvE,MAAMI,EAAQT,EAAIG,EAAKK,EACjBE,EAAQV,GAAKG,EAAIK,GACvB,IAAIG,EAAU,aAAaX,OAAOG,SAASK,OAAOC,SAAYT,SAASG,OAAOK,SAASE,MACvFC,GAAYF,IAASC,EAAS,uBAAyB,+BACvDlB,KAAKG,WAAWG,eAAe,wBAAwBO,YAAcM,CAAO,IAI9EnB,KAAKG,WAAWG,eAAe,iBAAiBC,iBAAiB,SAAS,KACxE,MAAMC,EAAIC,SAAST,KAAKG,WAAWG,eAAe,aAAaI,MAAO,IACtE,GAAIE,MAAMJ,GAER,YADAR,KAAKG,WAAWG,eAAe,kBAAkBO,YAAc,uCAGjE,MAAMO,GAAWZ,EACXM,EAAMN,EAAIY,EAChBpB,KAAKG,WAAWG,eAAe,kBAAkBO,YAAc,WAAWL,QAAQY,QAAcN,gEAAkE,GAErK,EAGHO,eAAeC,OAAO,eAAgB1B"}